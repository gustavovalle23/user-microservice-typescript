version: '3'

dotenv: ['.env', '.env.test']

vars:
  LOCAL_SERVICES: "user mongo"
  COMPOSE_FILE: "COMPOSE_FILE=docker-compose.yml"
  BUILD_CMD: "docker-compose build --no-cache"
  RUN_CMD: "docker-compose up -d {{.LOCAL_SERVICES}}"
  STOP_CMD: "docker-compose down -v"
  TEST_CMD_USER: "docker-compose exec -T user-microservice yarn test:e2e"
  BASH_CMD_USER: "docker exec -it user-microservice sh"
  INSTALL_DEPENDENCIES_CMD_USER: "docker-compose run user-microservice yarn install --ignore-scripts"
  LOGS_APP_CMD_USER: "docker-compose logs -f --tail=500 user-microservice"
  LOGS_CMD: "docker-compose logs -f --tail=500"

tasks:
  default:
    cmds:
      - task: run

  run:
    desc: Execute local project
    cmds:
      - task: build
      - '{{.RUN_CMD}}'

  up:
    desc: UP local project
    cmds:
      - '{{.RUN_CMD}}'

  build:
    desc: Build container
    cmds:
      - '{{.BUILD_CMD}}'

  install:user:
    desc: Install user dependencies
    cmds:
      - '{{.INSTALL_DEPENDENCIES_CMD_USER}}'

  stop:
    desc: Stop env
    cmds:
      - '{{.STOP_CMD}}'

  restart:
    desc: Recreate env
    cmds:
      - task: stop
      - task: run

  test:
    desc: Execute tests
    cmds:
      - task: stop
      - task: run
      - '{{.TEST_CMD}}'
      - task: stop

  user:
    desc: Enter user bash
    cmds:
      - '{{.BASH_CMD_USER}}'

  logs:
    desc: Docker logs
    cmds:
      - '{{.LOGS_CMD}}'   

  logs:user:
    desc: Docker user logs
    cmds:
      - '{{.LOGS_APP_CMD_USER}}'
